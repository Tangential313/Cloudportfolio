provider "aws" {
  region     = "us-east-1"
  access_key = "redacted"
  secret_key = "redacted"
}

resource "aws_vpc" "My-first-VPC" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name= "Production VPC"
  }
}

resource "aws_subnet" "main-subnet" {
  vpc_id     = aws_vpc.My-first-VPC.id
  cidr_block = "10.0.0.0/20"

  tags = {
    Name = "Main subnet"
  }
}
#Terrraform Project: 
#Create VPC
#Create IGW


resource "aws_vpc" "Prod-VPC"  {
cidr_block = "10.0.0.0/16"
tags = {
    Name= "Production"
}
}
resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.Prod-VPC.id

}

resource "aws_route_table" "prod-route-table" {
  vpc_id = aws_vpc.Prod-VPC.id

  route  {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }



  tags = {
    Name = "Prod Internet gateway"
  }
}
#Create subnet


resource "aws_subnet" "subnet-1" {
    vpc_id = aws_vpc.Prod-VPC.id
    cidr_block = "10.0.1.0/24"
    availability_zone = "us-east-1a"

    tags = {
        Name = "Prod_subnet"
    }
}

#Link Subnet to route table
resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.subnet-1.id
  route_table_id = aws_route_table.prod-route-table.id
}


#Create security group to allow port 22, 80, 443.
resource "aws_security_group" "allow_web_traffic" {
  name        = "allow_web traffic"
  description = "Allow inbound traffic from internet."
  vpc_id      = aws_vpc.Prod-VPC.id

  ingress {
    description      = "HTTPS Traffic"
    from_port        = 443
    to_port          = 443
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }
    ingress {
    description      = "HTTP Traffic"
    from_port        = 80
    to_port          = 80
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }
    ingress {
    description      = "SSH"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }



  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_web traffic"
  }
}

#Create Network interface with an IP in the subnet created earlier
resource "aws_network_interface" "web-server-aanu"   {
    subnet_id       = aws_subnet.subnet-1.id
    private_ips     = ["10.0.1.50"]
    security_groups = [aws_security_group.allow_web_traffic.id]
   
}


#Assign elastic IP to network interface

resource "aws_eip" "one" {
  domain                    = "vpc"
  network_interface         = aws_network_interface.web-server-aanu.id
  associate_with_private_ip = "10.0.1.50"
  depends_on                = [aws_internet_gateway.gw]
}
#Create Ubuntu server and enable apache2
resource "aws_instance" "web-server-instance" {
    ami = "ami-053b0d53c279acc90"
    instance_type = "t2.micro"
    availability_zone = "us-east-1a" #same zone as subnet
    key_name = "main-key"

    network_interface {
        device_index = 0
        network_interface_id  = aws_network_interface.web-server-aanu.id
    }
    user_data = <<-EOF
                #!bin/bash
                sudo apt update -y
                sudo apt install apache2 -y
                sudo systemct1 start apache2
                sudo bash -c 'echo My very first webs server >/var/www/html/index.html'
                EOF
    tags =  {
        Name = "Web-Server"
    }
}  
 #to list the public ip of the server 
 output "server_public_ip" {
    value = aws_eip.one.public_ip

}
 #to list the public ip of the server 
 output "server_private_ip" {
    value= aws_instance.web-server-instance.private_ip
 }

 output "server_id" {
    value = aws_instance.web-server-instance.id
 }
